apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'

apply plugin: 'maven'
apply plugin: 'signing'

version = "1.0.0"
group = "com.github.ManhDucIT"

configurations {
    archives {
        extendsFrom configurations.default
    }
}

signing {
    required { has("release") && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

uploadArchives {
    configuration = configurations.archives
    repositories.mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

        repository(url: sonatypeRepo) {
            authentication(userName: sonatypeUsername,
                    password: sonatypePassword)
        }

        pom.project {
            name 'NMvvm'
            packaging 'aar'
            description 'This is a framework which enables developers to create a clean native Android application following MVVM design pattern.'
            url 'https://github.com/ManhDucIT/NMvvm'

            scm {
                url 'scm:git@github.com:ManhDucIT/NMvvm.git'
                connection 'scm:git@github.com:ManhDucIT/NMvvm.git'
                developerConnection 'scm:git@github.com:ManhDucIT/NMvvm.git'
            }

            developers {
                developer {
                    id 'ducdm'
                    name 'Dang Manh Duc'
                    email 'ducdm2494@gmail.com'
                }
            }
        }
    }
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.1"
    dataBinding {
        enabled = true
    }

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    productFlavors {
    }
    packagingOptions {
        exclude 'META-INF/NOTICE' // will not include NOTICE file
        exclude 'META-INF/LICENSE' // will not include LICENSE file
        // as noted by @Vishnuvathsan you may also need to include
        // variations on the file name. It depends on your dependencies.
        // Some other common variations on notice and license file names
        exclude 'META-INF/notice'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license'
        exclude 'META-INF/license.txt'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.0.1'
    compile 'com.android.support:recyclerview-v7:25.0.1'
    testCompile 'junit:junit:4.12'
    compile 'com.fasterxml.jackson.core:jackson-core:2.8.5'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.5'
    compile 'io.reactivex.rxjava2:rxjava:2.0.2'
    compile 'com.annimon:stream:1.0.1'
}
